# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "master"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - "master"

env:
  PROJECT_ID: trim-keep-440008-a8 # TODO: update to your Google Cloud project ID
  REGION: us-central1 # TODO: update to your region
  SERVICE_NAME: rotter 
  ACTION_GCP_CREDENTIALS: ${{ secrets.ACTION_GCP_CREDENTIALS }} # TODO: update to your service name
  
jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - name: Set up Google Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.ACTION_GCP_CREDENTIALS }}
          
      - name: Configure Docker authentication
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |
          IMAGE=gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:$GITHUB_SHA
          docker build --tag $IMAGE \
            --build-arg NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }} \
            --build-arg NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }} .
          docker push $IMAGE

          
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy rotter \
            --image gcr.io/${{ env.ACTION_GCP_CREDENTIALS }}/${{ env.SERVICE_NAME}}:$GITHUB_SHA \
            --allow-unauthenticated \
            --region ${{ env.REGION }} 
      
